{"version":3,"file":"index-BI0tBnYC.js","sources":["../../Knowit.Umbraco.Bellissima.InstantBlockPreview.Frontend/src/api/core/OpenAPI.ts","../../Knowit.Umbraco.Bellissima.InstantBlockPreview.Frontend/src/index.ts"],"sourcesContent":["import type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Headers = Record<string, string>;\ntype Middleware<T> = (value: T) => T | Promise<T>;\ntype Resolver<T> = (options: ApiRequestOptions<T>) => Promise<T>;\n\nexport class Interceptors<T> {\n  _fns: Middleware<T>[];\n\n  constructor() {\n    this._fns = [];\n  }\n\n  eject(fn: Middleware<T>): void {\n    const index = this._fns.indexOf(fn);\n    if (index !== -1) {\n      this._fns = [...this._fns.slice(0, index), ...this._fns.slice(index + 1)];\n    }\n  }\n\n  use(fn: Middleware<T>): void {\n    this._fns = [...this._fns, fn];\n  }\n}\n\nexport type OpenAPIConfig = {\n\tBASE: string;\n\tCREDENTIALS: 'include' | 'omit' | 'same-origin';\n\tENCODE_PATH?: ((path: string) => string) | undefined;\n\tHEADERS?: Headers | Resolver<Headers> | undefined;\n\tPASSWORD?: string | Resolver<string> | undefined;\n\tTOKEN?: string | Resolver<string> | undefined;\n\tUSERNAME?: string | Resolver<string> | undefined;\n\tVERSION: string;\n\tWITH_CREDENTIALS: boolean;\n\tinterceptors: {\n\t\trequest: Interceptors<RequestInit>;\n\t\tresponse: Interceptors<Response>;\n\t};\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n\tBASE: '',\n\tCREDENTIALS: 'include',\n\tENCODE_PATH: undefined,\n\tHEADERS: undefined,\n\tPASSWORD: undefined,\n\tTOKEN: undefined,\n\tUSERNAME: undefined,\n\tVERSION: 'Latest',\n\tWITH_CREDENTIALS: false,\n\tinterceptors: {\n\t\trequest: new Interceptors(),\n\t\tresponse: new Interceptors(),\n\t},\n};","import { UmbEntryPointOnInit } from '@umbraco-cms/backoffice/extension-api';\r\nimport { ManifestBlockEditorCustomView } from '@umbraco-cms/backoffice/extension-registry';\r\nimport { UMB_AUTH_CONTEXT } from '@umbraco-cms/backoffice/auth';\r\nimport { OpenAPI } from './api/index.ts';\r\n\r\nexport const onInit: UmbEntryPointOnInit = async (_host, extensionRegistry) => {\r\n    \r\n    _host.consumeContext(UMB_AUTH_CONTEXT, async (auth) => {\r\n        if (!auth) return;\r\n\r\n        const umbOpenApi = auth.getOpenApiConfiguration();\r\n        OpenAPI.BASE = umbOpenApi.base;\r\n        OpenAPI.TOKEN = umbOpenApi.token;\r\n        OpenAPI.WITH_CREDENTIALS = umbOpenApi.withCredentials;\r\n        OpenAPI.CREDENTIALS = umbOpenApi.credentials;\r\n    });\r\n  \r\n    const manifestBlockPreview : ManifestBlockEditorCustomView = {\r\n        alias: 'knowit-instant-block-preview',\r\n        name: 'Knowit Instant Block Preview',\r\n        type: 'blockEditorCustomView',\r\n        elementName: 'knowit-instant-block-preview',\r\n        js: () => import('./elements/knowit-instant-block-preview.ts'),\r\n    }\r\n    \r\n    extensionRegistry.register(manifestBlockPreview);\r\n};\r\n"],"names":["Interceptors","fn","index","OpenAPI","onInit","_host","extensionRegistry","UMB_AUTH_CONTEXT","auth","umbOpenApi","manifestBlockPreview"],"mappings":";AAMO,MAAMA,EAAgB;AAAA,EAG3B,cAAc;AACZ,SAAK,OAAO;EACd;AAAA,EAEA,MAAMC,GAAyB;AAC7B,UAAMC,IAAQ,KAAK,KAAK,QAAQD,CAAE;AAClC,IAAIC,MAAU,OACZ,KAAK,OAAO,CAAC,GAAG,KAAK,KAAK,MAAM,GAAGA,CAAK,GAAG,GAAG,KAAK,KAAK,MAAMA,IAAQ,CAAC,CAAC;AAAA,EAE5E;AAAA,EAEA,IAAID,GAAyB;AAC3B,SAAK,OAAO,CAAC,GAAG,KAAK,MAAMA,CAAE;AAAA,EAC/B;AACF;AAkBO,MAAME,IAAyB;AAAA,EACrC,MAAM;AAAA,EACN,aAAa;AAAA,EACb,aAAa;AAAA,EACb,SAAS;AAAA,EACT,UAAU;AAAA,EACV,OAAO;AAAA,EACP,UAAU;AAAA,EACV,SAAS;AAAA,EACT,kBAAkB;AAAA,EAClB,cAAc;AAAA,IACb,SAAS,IAAIH,EAAa;AAAA,IAC1B,UAAU,IAAIA,EAAa;AAAA,EAC5B;AACD,GClDaI,IAA8B,OAAOC,GAAOC,MAAsB;AAErE,EAAAD,EAAA,eAAeE,GAAkB,OAAOC,MAAS;AACnD,QAAI,CAACA,EAAM;AAEL,UAAAC,IAAaD,EAAK;AACxB,IAAAL,EAAQ,OAAOM,EAAW,MAC1BN,EAAQ,QAAQM,EAAW,OAC3BN,EAAQ,mBAAmBM,EAAW,iBACtCN,EAAQ,cAAcM,EAAW;AAAA,EAAA,CACpC;AAED,QAAMC,IAAuD;AAAA,IACzD,OAAO;AAAA,IACP,MAAM;AAAA,IACN,MAAM;AAAA,IACN,aAAa;AAAA,IACb,IAAI,MAAM,OAAO,4CAA4C;AAAA,EAAA;AAGjE,EAAAJ,EAAkB,SAASI,CAAoB;AACnD;"}